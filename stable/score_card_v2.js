!function(e,a){"object"==typeof exports&&"object"==typeof module?module.exports=a():"function"==typeof define&&define.amd?define([],a):"object"==typeof exports?exports.score_card_v2=a():e.score_card_v2=a()}(self,(()=>(()=>{const e={options:{table_width:{section:"Style",type:"boolean",default:"true",label:"Size Width to Fit"}},create:function(e,a){e.innerHTML='\n    <style>\n      .table {\n        display: table;\n        font-family: "Google Sans", "Noto Sans", "Noto Sans JP", "Noto Sans CJK KR", "Noto Sans Arabic UI", "Noto Sans Devanagari UI", "Noto Sans Hebrew", "Noto Sans Thai UI", Helvetica, Arial, sans-serif\n        font-color: #3a4245;\n      }\n      .table_row {\n          display: table-row;\n      }\n      .row_label {\n          display: table-cell;\n          padding: 1rem;\n          vertical-align: middle;\n      }\n      .main_title {\n          font-size: 1.5rem;\n      }\n      .sub_title {\n          font-size: 1rem;\n      }\n      .main_area {\n          display: table-cell;\n          vertical-align: middle;\n          padding: 1rem;\n      }\n      .value_box {\n          display: flex;\n      }\n      .value_area {\n          display: inline-block;\n          position: relative;\n      }\n      .value_area::before {\n        content:"";\n        display:inline-block;\n        width:1rem;\n        height:90%;\n        background-color:#0097A7;\n        position:absolute;\n        top:0;\n        left:-1.5rem;\n      }\n      .main_value {\n          font-size: 2rem;\n          font-weight: bold;\n      }\n      .sub_value {\n          font-size: 1rem;\n      }\n      .compared_title{}\n      .compared_value {\n          font-weight: bold;\n      }\n      .comparison_area {\n          padding-left: 0.5rem;\n          margin: auto;\n          vertical-align: middle;\n      }\n      .addional_area {\n          display: table-cell;\n          vertical-align: middle;\n          padding: 1rem;\n      }\n      .additiona_row {\n      }\n      .additional_title {}\n      .additional_value {\n          font-weight: bold;\n      }\n    </style>\n    <div id="container"></div>\n    '},updateAsync:function(e,a,n,l,t,i){this.clearErrors();const d=document.getElementById("container");if(d.innerHTML="",l.fields.measures.length<1)return void this.addError({title:"Missing Measure",message:"This requires at least one measure."});let o;o=Object.assign({},this.options);const s=[];let r=[],c={};l.fields.measure_like.forEach((a=>{let l=!0;n[a.name+"-type"]&&"main"!==n[a.name+"-type"]&&(l=!1),l?(c?(c.additional=r,s.push(c),c={},r=[]):c={},c.main=e[0][a.name].rendered?e[0][a.name].rendered:e[0][a.name].value,c.main_label=n[a.name+"-label"]?n[a.name+"-label"]:a.label):"compare"===n[a.name+"-type"]?(c.compare=e[0][a.name].rendered?e[0][a.name].rendered:e[0][a.name].value,c.compare_label=n[a.name+"-label"]?n[a.name+"-label"]:a.label):"changed"===n[a.name+"-type"]?c.changed=e[0][a.name].rendered?e[0][a.name].rendered:e[0][a.name].value:"additional"===n[a.name+"-type"]&&r.push({label:a.label,value:e[0][a.name].rendered?e[0][a.name].rendered:e[0][a.name].value})})),c.additional=r,s.push(c);const m=document.createElement("div",{class:"table"});m.className="table",n.table_width&&(m.style.width="100%"),s.forEach((e=>{const a=document.createElement("div",{class:"table_row"});a.className="table_row";const n=document.createElement("div",{class:"row_label"});if(n.className="row_label",e.main_label){const a=document.createElement("div",{class:"main_title"});a.className="main_title",a.innerText=e.main_label,n.appendChild(a)}a.appendChild(n);const l=document.createElement("div",{class:"main_area"});l.className="main_area";const t=document.createElement("div",{class:"value_box"});t.className="value_box";const i=document.createElement("div",{class:"value_area"});if(i.className="value_area",e.main){const a=document.createElement("div",{class:"main_value"});a.className="main_value",a.innerText=e.main,i.appendChild(a)}if(e.compare){const a=document.createElement("div",{class:"sub_value"});a.className="sub_value";const n=document.createElement("span",{class:"compared_title"});n.className="compared_title",n.innerText=e.compare_label+": ";const l=document.createElement("span",{class:"compared_value"});l.className="compared_value",l.innerText=e.compare,a.appendChild(n),a.appendChild(l),i.appendChild(a)}t.appendChild(i);const d=document.createElement("div",{class:"comparison_area"});d.className="comparison_area",e.changed&&(d.innerText=e.changed),t.appendChild(d),l.appendChild(t),a.appendChild(l);const o=document.createElement("div",{class:"addional_area"});o.className="addional_area",e.additional&&e.additional.forEach((e=>{const a=document.createElement("div",{class:"additiona_row"});a.className="additiona_row";const n=document.createElement("span",{class:"additional_title"});n.className="additional_title",n.innerText=e.label+": ";const l=document.createElement("span",{class:"additional_value"});l.className="additional_value",l.innerText=e.value,a.appendChild(n),a.appendChild(l),o.appendChild(a)})),a.appendChild(o),m.appendChild(a)})),d.appendChild(m),l.fields.measure_like.forEach((e=>{o[e.name]||(o[e.name+"-type"]={label:e.label+": type",section:"Series",type:"string",display:"select",default:"main",values:[{"Main Value":"main"},{"Compared Value":"compare"},{"Changed Value":"changed"},{"Additional Value":"additional"}]},o[e.name+"-label"]={section:"Style",label:e.label+": label",type:"string",default:e.label})})),o&&this.trigger("registerOptions",o),i()}};return looker.plugins.visualizations.add(e),{}})()));